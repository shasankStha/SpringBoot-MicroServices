spring.application.name=order-service
spring.datasource.url = jdbc:postgresql://localhost:5432/microservice
spring.datasource.username =postgres
spring.datasource.password =admin
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto= update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql = true

server.port = 8081
inventory.url=http://localhost:8082
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

##Resilience4J Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5


##Resilience4J TimeOutProperties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

##Resilience4J RetryProperties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2s


##Kafka Properties
spring.kafka.bootstrap-servers =localhost:9092
spring.kafka.template.default-topic=order-placed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.example.order_service.event.OrderPlacedEvent
